import{_ as e,o as t,c as o,e as c}from"./app-BihAYnmf.js";const a={},p=c("<p>我们通过封装的手段，将成员变量、方法等包装在一个类中，那么，被封装在类中的这些成员变量和方法，能不能被外部访问呢？能被谁访问呢？</p><p>这种能不能被访问、能被谁访问的特性，Java是通过访问控制修饰符来实现的。Java中，可以使用访问控制符来保护对类、变量、方法和构造方法的访问，Java 支持 4 种不同的访问权限。</p><p>对于成员变量和方法的作用域，public，protected，private以及不写之间的区别：</p><p><code>public</code> : 表明该成员变量或者方法是对所有类或者对象都是可见的,所有类或者对象都可以直接访问</p><p><code>private</code> : 表明该成员变量或者方法是私有的,只有当前类对其具有访问权限,除此之外其他类或者对象都没有访问权限.子类也没有访问权限.</p><p><code>protected</code> : 表明成员变量或者方法对类自身,与同在一个包中的其他类可见,其他包下的类不可访问,除非是他的子类</p><p><code>default</code> : 表明该成员变量或者方法只有自己和其位于同一个包的内可见,其他包内的类不能访问,即便是它的子类</p>",7),d=[p];function r(s,i){return t(),o("div",null,d)}const l=e(a,[["render",r],["__file","scope.html.vue"]]),m=JSON.parse('{"path":"/docs/java/object-oriented/scope.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":1715384499000,"updatedTime":1715384499000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":1}]},"filePathRelative":"docs/java/object-oriented/scope.md"}');export{l as comp,m as data};
