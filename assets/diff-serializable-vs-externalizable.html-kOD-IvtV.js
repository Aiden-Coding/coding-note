import{_ as e,o as a,c as o,e as c}from"./app-BihAYnmf.js";const i={},l=c("<p>Java中的类通过实现 <code>java.io.Serializable</code> 接口以启⽤其序列化功能。 未实现此接口的类将⽆法使其任何状态序列化或反序列化。</p><p>可序列化类的所有⼦类型本⾝都是可序列化的。</p><p>序列化接口没有⽅法或字段， 仅⽤于标识可序列化的语义。</p><p>当试图对⼀个对象进⾏序列化的时候， 如果遇到不⽀持<code>Serializable</code> 接口的对象。 在此情况下， 将抛<code>NotSerializableException</code>。</p><p>如果要序列化的类有⽗类， 要想同时将在⽗类中定义过的变量持久化下来， 那么⽗类也应该集成<code>java.io.Serializable</code>接口。</p><p><code>Externalizable</code>继承了<code>Serializable</code>， 该接口中定义了两个抽象⽅法：<code>writeExternal()</code>与<code>readExternal()</code>。 当使⽤<code>Externalizable</code>接口来进⾏序列化与反序列化的时候需要开发⼈员重写writeExternal()与readExternal()⽅法。</p><p>如果没有在这两个⽅法中定义序列化实现细节， 那么序列化之后， 对象内容为空。</p><p>实现<code>Externalizable</code>接口的类必须要提供⼀个<code>public</code>的⽆参的构造器。</p><p>所以， 实现<code>Externalizable</code>， 并实现<code>writeExternal()</code>和<code>readExternal()</code>⽅法可以指定序列化哪些属性。</p>",9),t=[l];function d(r,n){return a(),o("div",null,t)}const p=e(i,[["render",d],["__file","diff-serializable-vs-externalizable.html.vue"]]),b=JSON.parse('{"path":"/docs/java/java-basic/diff-serializable-vs-externalizable.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":1715384499000,"updatedTime":1715384499000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":1}]},"filePathRelative":"docs/java/java-basic/diff-serializable-vs-externalizable.md"}');export{p as comp,b as data};
