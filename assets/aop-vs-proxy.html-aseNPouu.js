import{_ as e,o as t,c as a,a as o}from"./app-BihAYnmf.js";const n={},s=o("p",null,"Spring AOP中的动态代理主要有两种方式，JDK动态代理和CGLIB动态代理。",-1),c=o("p",null,"JDK动态代理通过反射来接收被代理的类，并且要求被代理的类必须实现一个接口。JDK动态代理的核心是InvocationHandler接口和Proxy类。",-1),r=o("p",null,"如果目标类没有实现接口，那么Spring AOP会选择使用CGLIB来动态代理目标类。",-1),i=o("p",null,"CGLIB（Code Generation Library），是一个代码生成的类库，可以在运行时动态的生成某个类的子类，注意，CGLIB是通过继承的方式做的动态代理，因此如果某个类被标记为final，那么它是无法使用CGLIB做动态代理的。",-1),l=[s,c,r,i];function _(d,p){return t(),a("div",null,l)}const h=e(n,[["render",_],["__file","aop-vs-proxy.html.vue"]]),v=JSON.parse('{"path":"/docs/java/java-basic/aop-vs-proxy.html","title":"基础","lang":"en-US","frontmatter":{"title":"基础"},"headers":[],"git":{"createdTime":1715384499000,"updatedTime":1715385524000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":2}]},"filePathRelative":"docs/java/java-basic/aop-vs-proxy.md"}');export{h as comp,v as data};
