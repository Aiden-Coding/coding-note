import{_ as t,o as e,c as a,e as n}from"./app-BihAYnmf.js";const i={},r=n(`<p>在关于java的集合类的学习中，我们发现<code>ArrayList</code>类和<code>Vector</code>类都是使用数组实现的，但是在定义数组<code>elementData</code>这个属性时稍有不同，那就是<code>ArrayList</code>使用<code>transient</code>关键字</p><pre><code>private transient Object[] elementData;  

protected Object[] elementData;  
</code></pre><p>那么，首先我们来看一下<strong>transient</strong>关键字的作用是什么。</p><h3 id="transient" tabindex="-1"><a class="header-anchor" href="#transient"><span>transient</span></a></h3><blockquote><p>Java语言的关键字，变量修饰符，如果用transient声明一个实例变量，当对象存储时，它的值不需要维持。这里的对象存储是指，Java的serialization提供的一种持久化对象实例的机制。当一个对象被序列化的时候，transient型变量的值不包括在序列化的表示中，然而非transient型的变量是被包括进去的。使用情况是：当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。</p></blockquote><p>简单点说，就是被transient修饰的成员变量，在序列化的时候其值会被忽略，在被反序列化后， transient 变量的值被设为初始值， 如 int 型的是 0，对象型的是 null。</p>`,6),s=[r];function o(c,d){return e(),a("div",null,s)}const p=t(i,[["render",o],["__file","transient-in-java.html.vue"]]),m=JSON.parse('{"path":"/docs/java/java-basic/transient-in-java.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"transient","slug":"transient","link":"#transient","children":[]}],"git":{"createdTime":1715384499000,"updatedTime":1715384499000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":1}]},"filePathRelative":"docs/java/java-basic/transient-in-java.md"}');export{p as comp,m as data};
