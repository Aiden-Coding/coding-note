import{_ as e,o as t,c as a,e as p}from"./app-BihAYnmf.js";const n={},o=p('<p>前面我们提到过：&quot;Java中支持一个类同时实现多个接口，但是不支持同时继承多个类。但是这个问题在Java 8之后也不绝对了。&quot;</p><p>那么，是不是又很很想知道，为什么Java中不支持同时继承多个类呢？</p><h3 id="多继承" tabindex="-1"><a class="header-anchor" href="#多继承"><span>多继承</span></a></h3><p>一个类，只有一个父类的情况，我们叫做单继承。而一个类，同时有多个父类的情况，叫做多继承。</p><p>在Java中，一个类，只能通过extends关键字继承一个类，不允许多继承。但是，多继承在其他的面向对象语言中是有可能支持的。</p><p>像C++就是支持多继承的，主要是因为编程的过程是对现实世界的一种抽象，而现实世界中，确实存在着需要多继承的情况。比如维基百科中关于多继承举了一个例子：</p><p>例如，可以创造一个“哺乳类动物”类别，拥有进食、繁殖等的功能；然后定义一个子类型“猫”，它可以从父类继承上述功能。</p><p>但是，&quot;猫&quot;还可以作为&quot;宠物&quot;的子类，拥有一些宠物独有的能力。</p><p>所以，有些面向对象语言是支持多重继承的。</p><p>但是，多年以来，多重继承一直都是一个敏感的话题，反对者指它增加了程序的复杂性与含糊性。</p><h3 id="菱形继承问题" tabindex="-1"><a class="header-anchor" href="#菱形继承问题"><span>菱形继承问题</span></a></h3><p>假设我们有类B和类C，它们都继承了相同的类A。另外我们还有类D，类D通过多重继承机制继承了类B和类C。</p><p><img src="https://www.hollischuang.com/wp-content/uploads/2021/02/16145019571199.jpg" alt="">￼</p><p>这时候，因为D同时继承了B和C，并且B和C又同时继承了A，那么，D中就会因为多重继承，继承到两份来自A中的属性和方法。</p><p>这时候，在使用D的时候，如果想要调用一个定义在A中的方法时，就会出现歧义。</p><p>因为这样的继承关系的形状类似于菱形，因此这个问题被形象地称为菱形继承问题。</p><p>而C++为了解决菱形继承问题，又引入了<strong>虚继承</strong>。</p><p>因为支持多继承，引入了菱形继承问题，又因为要解决菱形继承问题，引入了虚继承。而经过分析，人们发现我们其实真正想要使用多继承的情况并不多。</p><p>所以，在 Java 中，不允许“实现多继承”，即一个类不允许继承多个父类。但是 Java 允许“声明多继承”，即一个类可以实现多个接口，一个接口也可以继承多个父接口。由于接口只允许有方法声明而不允许有方法实现（Java 8以前），这就避免了 C++ 中多继承的歧义问题。</p><p>但是，Java不支持多继承，在Java 8中支持了默认函数（default method ）之后就不那么绝对了。</p><p>虽然我们还是没办法使用extends同时继承多个类，但是因为有了默认函数，我们有可能通过implements从多个接口中继承到多个默认函数，那么，又如何解决这种情况带来的菱形继承问题呢？</p><p>这个问题，我们在后面第20.4章节中单独介绍。</p>',22),i=[o];function l(c,s){return t(),a("div",null,i)}const d=e(n,[["render",l],["__file","multiple-inheritance.html.vue"]]),h=JSON.parse('{"path":"/docs/java/object-oriented/multiple-inheritance.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"多继承","slug":"多继承","link":"#多继承","children":[]},{"level":3,"title":"菱形继承问题","slug":"菱形继承问题","link":"#菱形继承问题","children":[]}],"git":{"createdTime":1715384499000,"updatedTime":1715384499000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":1}]},"filePathRelative":"docs/java/object-oriented/multiple-inheritance.md"}');export{d as comp,h as data};
