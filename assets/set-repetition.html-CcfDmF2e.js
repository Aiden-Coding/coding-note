import{_ as a,o as s,c as o,a as e,b as t}from"./app-BihAYnmf.js";const r={},n=e("p",null,"在Java的Set体系中，根据实现方式不同主要分为两大类。HashSet和TreeSet。",-1),c=e("p",null,[t("1、TreeSet 是二叉树实现的，TreeSet中的数据是自动排好序的，不允许放入 null值"),e("br"),t(" 2、HashSet 是哈希表实现的，HashSet中的数据是无序的，可以放入 null值，但只能放入一个null，两者中的值都不能重复，就如数据库中的唯一约束")],-1),l=e("p",null,"在HashSet中，基本的操作都是由HashMap底层实现的，因为HashSet底层是用HashMap存储数据的。当向HashSet中添加元素的时候，首先计算元素的hashCode值，然后通过扰动计算和按位与的方式计算出这个元素的存储位置，如果这个位置为空，就将元素添加进去；如果不为空，则用equals方法比较元素是否相等，相等就不添加，否则找一个空位添加。",-1),i=e("p",null,"TreeSet的底层是TreeMap的keySet()，而TreeMap是基于红黑树实现的，红黑树是一种平衡二叉查找树，它能保证任何一个节点的左右子树的高度差不会超过较矮的那棵的一倍。",-1),p=e("p",null,"TreeMap是按key排序的，元素在插入TreeSet时compareTo()方法要被调用，所以TreeSet中的元素要实现Comparable接口。TreeSet作为一种Set，它不允许出现重复元素。TreeSet是用compareTo()来判断重复元素的。",-1),_=[n,c,l,i,p];function h(d,m){return s(),o("div",null,_)}const T=a(r,[["render",h],["__file","set-repetition.html.vue"]]),u=JSON.parse('{"path":"/docs/java/java-basic/set-repetition.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":1715384499000,"updatedTime":1715384499000,"contributors":[{"name":"dong","email":"dwx_job@163.com","commits":1}]},"filePathRelative":"docs/java/java-basic/set-repetition.md"}');export{T as comp,u as data};
